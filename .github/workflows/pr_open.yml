name: Android Pipeline

on:
  pull_request:
    branches:
      - 'main'
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}

      - name: Grant execute permission for Gradle
        run: chmod +x ./gradlew

      - name: Run Detekt
        run: ./gradlew detekt

      - name: Run Ktlint
        run: ./gradlew ktlintCheck

      - name: Run Unit Tests
        run: ./gradlew testDebugUnitTest

      - name: Start emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          arch: x86_64
          profile: Nexus 5X
          package: "system-images;android-30;google_apis;x86_64"
          tag: google_apis
          abi: x86_64
          script: |
            #!/usr/bin/env bash
            sdkmanager --install 'platform-tools' 'platforms;android-30' 'emulator' 'system-images;android-30;google_apis;x86_64'
            echo no | avdmanager create avd -n test -k 'system-images;android-30;google_apis;x86_64' --force
            emulator -avd test -no-window -no-audio -no-boot-anim -no-accel

      - name: Wait for emulator to be ready
        run: adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;'

      - name: Run Instrumented Tests
        run: ./gradlew connectedAndroidTest

  merge:

    runs-on: ubuntu-latest

    if: github.event_name == 'pull_request_target' && github.event.action == 'opened'

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Merge PR
        uses: peter-evans/create-pull-request@v3
        with:
          title: Merge pull request ${GITHUB_REF##*/} from ${GITHUB_REPOSITORY##*/}
          commit-message: "Automatically merged pull request ${GITHUB_REF##*/}"
          delete-branch: true
          branch: main
          token: ${{ secrets.GITHUB_TOKEN }}
